{
  "name": "server",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "packageManager": "yarn@1.22.22",
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "ENV=dev nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "ENV=prod node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "docker:build": "docker buildx build -t public.ecr.aws/f8s4h7z9/chrislfieldsii:watch-room-server --platform linux/amd64 --secret id=npmrc,src=./.npmrc .",
    "docker:run": "docker run -p 127.0.0.1:3000:3000/tcp --env-file .env.dev --mount type=bind,src=/Users/cri/Documents/projects/watch-room/server/src/secrets,dst=/Users/cri/Documents/projects/watch-room/server/src/secrets --name 'watch-room-server-dev' public.ecr.aws/f8s4h7z9/chrislfieldsii:watch-room-server",
    "docker:login": "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/f8s4h7z9/chrislfieldsii",
    "docker:push": "docker push public.ecr.aws/f8s4h7z9/chrislfieldsii:watch-room-server",
    "ec2:setup-docker": "sudo yum update -y && sudo yum install docker -y && sudo systemctl start docker && sudo systemctl status docker",
    "ec2:docker-pull": "sudo docker pull public.ecr.aws/f8s4h7z9/chrislfieldsii:watch-room-server",
    "ec2:docker-run": "sudo docker run -p 443:3000/tcp --name prod --mount type=bind,src=/etc/letsencrypt,dst=/etc/letsencrypt public.ecr.aws/f8s4h7z9/chrislfieldsii:watch-room-server",
    "ec2:docker-prune": "sudo docker system prune -a"
  },
  "scriptsDocs": {
    "docker:run": "TODO: currently contains hardcoded path for my system. Fix this",
    "ec2:setup-docker": "Sets up docker on an ec2 instance. Must ssh into ec2 instance and copy this script and run it"
  },
  "dependencies": {
    "@chrislfieldsii/cloud-logger": "^1.0.0",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.2.2",
    "@nestjs/core": "^10.0.0",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/platform-socket.io": "^10.3.7",
    "@nestjs/websockets": "^10.3.7",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
